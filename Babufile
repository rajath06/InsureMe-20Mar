pipeline {
    agent any
    tools {
        maven 'Maven_3.8.1' // Ensure this matches the Maven installation name in Jenkins
    }
    environment {
        DOCKER_IMAGE = 'cbabu85/insure-me-app:4.0'
    }
    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning the Git repository...'
                git branch: 'main', url: 'https://github.com/cbabu85/InsureMe-20Mar.git'
            }
        }
        stage('Build with Maven') {
            steps {
                echo 'Building the application with Maven...'
                sh 'mvn clean package'
            }
        }
        stage('Publish Test Reports') {
            steps {
                echo 'Publishing test reports...'
                publishHTML([
                    reportDir: 'target/surefire-reports',
                    reportFiles: 'index.html',
                    reportName: 'Test Report'
                ])
            }
        }
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }
        stage('Push Docker Image') {
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                    sh "docker push ${DOCKER_IMAGE}"
                }
            }
        }
        stage('Deploy with Ansible') {
            steps {
                echo 'Deploying application using Ansible...'
                ansiblePlaybook(
                    playbook: 'ansible/deploy.yml',
                    inventory: 'ansible/hosts',
                    credentialsId: 'ansible-ssh-key'
                )
            }
        }
    }
    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline execution failed.'
        }
    }
}
